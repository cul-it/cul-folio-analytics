--MCR134_F 
--Approved Invoices for FBO
--last updated: 10-29-24
--This query provides the list of approved invoices within a date range along with ledger name, external account no, vendor name, 
--vendor invoice no, invoice line number, invoice line description, invoice date, invoice payment date, order format, format name, purchase order line no,fund code, transaction type, transaction amount.
--In cases where the quantity was incorrectly entered as zero, this query replaces zero with 1
--Converted to MetaDB 8-29-24 
	-- added invoice line number and invoice status to Select fields 
	-- changed Where condition to "inv.status in ('Paid','Approved')" 
	-- added the invoice approval date as part of the where condition, using the start and end date as parameters
--9-5-24: removed "distinct" from the main query
	-- removed "new quantity" subquery (not needed, because all entries in the invoice_lines__t table have non-zero and non-null values)
	-- replaced "new quantity" with invl.quantity
	-- changed the payment_end_date Where statement to be "less than," not "less than or equal to"
	-- changed invoice status condition to "Paid" or "Approved" and applied the payment date parameter values to both "Paid date" or "Approval date"
--10-29-24: discovered that invoice_line__t.quantity does in fact have some entries = '0', but because this query does not include the "transaction_amount_per_qty" field, there is no need to have the New Quantity subquery.


WITH parameters AS (
    SELECT
        '2024-07-01' AS payment_date_start_date,--enter invoice payment start date and end date in YYYY-MM-DD format
        '2025-1-22' AS payment_date_end_date, -- Excludes the selected date
        ''::VARCHAR AS transaction_fund_code, -- Ex: 999, 521, p1162 etc.
        ''::VARCHAR AS transaction_ledger_name, -- Ex: CUL - Contract College, CUL - Endowed, CU Medical, Lab OF O
        ''::VARCHAR AS fiscal_year_code,-- Ex: FY2022, FY2023 etc.
        ''::VARCHAR AS format_name -- Ex: Book, Serial, Textual Resource, etc.      
),

format_extract AS ( -- gets the format code from the marc leader and links to the local translation table
    SELECT
        sm.instance_id::uuid,
        substring(sm.content,7,2) AS bib_format_code,
        vs.folio_format_type as bib_format_display
    FROM
        folio_source_record.marc__t AS sm
    	LEFT JOIN local_shared.vs_folio_physical_material_formats AS vs
        ON substring (sm.content,7,2) = vs.leader0607
    WHERE sm.field = '000'
),

finance_transaction_invoices_ext AS ( -- gets details of the finance transactions and converts Credits to negative values
    SELECT
        fti.transaction_id AS transaction_id,    
        fti.invoice_date::date,
        fti.invoice_payment_date::DATE AS invoice_payment_date,
        fti.transaction_fiscal_year_id,
        ffy.code AS fiscal_year_code,
        fti.invoice_id,
        fti.invoice_line_id,
        fti.po_line_id,
        fl.name AS finance_ledger_name,
        fti.transaction_expense_class_id AS expense_class,
        fti.invoice_vendor_name,
        fti.transaction_type,
        fti.transaction_amount,
        fti.effective_fund_id AS effective_fund_id,
        fti.effective_fund_code AS effective_fund_code,
        ff.name as fund_name,
        fft.name AS fund_type_name,
    CASE WHEN fti.transaction_type = 'Credit' AND fti.transaction_amount >0.01 
         THEN fti.transaction_amount *-1 
         ELSE fti.transaction_amount 
         END AS effective_transaction_amount,
        ff.external_account_no AS external_account_no
    FROM 
    	folio_derived.finance_transaction_invoices AS fti
    LEFT JOIN folio_finance.fund__t AS ff ON ff.code = fti.effective_fund_code
    LEFT JOIN folio_finance.fiscal_year__t AS ffy ON ffy.id = fti.transaction_fiscal_year_id
    LEFT JOIN folio_finance.fund_type__t AS fft ON fft.id = ff.fund_type_id
    LEFT JOIN folio_finance.ledger__t AS fl ON ff.ledger_id = fl.id
),


fund_fiscal_year_group AS ( -- associates the fund with the finance group and fiscal year
    SELECT
       FGFFY.id AS group_fund_fiscal_year_id,
       FG.id as group_id,
       FG.name AS finance_group_name,
       ff.id AS fund_id,
       ff.code AS fund_code,
       fgffy.fiscal_year_id AS fund_fiscal_year_id,
       ffy.code AS fiscal_year_code
    FROM
       folio_finance.groups__t AS FG
    LEFT JOIN folio_finance.group_fund_fiscal_year__t AS FGFFY ON fg.id = fgffy.group_id --OLD group_id
    LEFT JOIN folio_finance.fiscal_year__t AS ffy ON ffy. id = fgffy.fiscal_year_id
    LEFT JOIN folio_finance.fund__t AS FF ON FF.id = fgffy.fund_id
    
    ORDER BY ff.code
)

-- this subquery not needed because the transaction cost per item (calculation) is not included in this version of the query

	/*new_quantity AS ( -- converts invoice line quantities showing "0" to "1" for use in a price-per-unit calculation
	SELECT
	     id AS invoice_line_id,
	     CASE WHEN quantity = 0
	          THEN 1
	          ELSE quantity
	          END AS fixed_quantity
	     FROM folio_invoice.invoice_lines__t
	),*/

SELECT 
        current_date AS current_date,           
       CASE WHEN 
                        ((SELECT
                        payment_date_start_date::varchar
                        FROM
                parameters)= ''
        OR      (SELECT
                payment_date_end_date::varchar
                        FROM
                parameters) ='')
                THEN 'Not Selected'
                ELSE
                        (SELECT payment_date_start_date::varchar
                FROM parameters) || ' to '::varchar || 
                (SELECT payment_date_end_date::varchar
                                FROM parameters)
                        END AS payment_date_range,       
       pol.order_format,
       ftie.invoice_date::date,
       inv.status as invoice_status,
       inv.payment_date::DATE as invoice_payment_date,
       ftie.effective_transaction_amount,
       ftie.transaction_type,
       ftie.invoice_vendor_name,
       inv.vendor_invoice_no,
       invl.invoice_line_number,
       replace(replace (invl.description, chr(13), ''),chr(10),'') AS invoice_line_description,--updated code to get rid of carriage returns
       ftie.finance_ledger_name,
       ftie.fiscal_year_code AS transaction_fiscal_year_code,
       ftie.effective_fund_code,
       pol.po_line_number,      
       formatt.bib_format_display AS format_name,
       invl.quantity,       
       ftie.external_account_no
FROM
        finance_transaction_invoices_ext AS ftie
        LEFT JOIN folio_invoice.invoice_lines__t AS invl ON invl.id::UUID = ftie.invoice_line_id::UUID
        LEFT JOIN folio_invoice.invoices__t AS inv ON ftie.invoice_id::UUID = inv.id::UUID
        LEFT JOIN folio_orders.po_line__t AS pol ON ftie.po_line_id::UUID = pol.id::UUID
        LEFT JOIN folio_orders.purchase_order__t AS PO ON po.id::UUID = pol.purchase_order_id::UUID
        LEFT JOIN folio_derived.instance_ext AS iext ON iext.instance_id = pol.instance_id
        LEFT JOIN folio_finance.group_fund_fiscal_year__t AS ffyg ON ffyg.fund_id = ftie.effective_fund_id
        LEFT JOIN format_extract AS formatt ON pol.instance_id::UUID = formatt.instance_id::UUID
WHERE
        (((SELECT payment_date_start_date FROM parameters) ='' OR (inv.payment_date::date >= (SELECT payment_date_start_date FROM parameters)::DATE))
        AND ((SELECT payment_date_end_date FROM parameters) ='' OR (inv.payment_date::date < (SELECT payment_date_end_date FROM parameters)::DATE))
        or 
        ((SELECT payment_date_start_date FROM parameters) ='' OR (inv.approval_date::date >= (SELECT payment_date_start_date FROM parameters)::DATE))
        AND ((SELECT payment_date_end_date FROM parameters) ='' OR (inv.approval_date::date < (SELECT payment_date_end_date FROM parameters)::DATE))
        )
        
        AND inv.status in ('Paid','Approved')
        AND ((ftie.effective_fund_code = (SELECT transaction_fund_code FROM parameters)) OR ((SELECT transaction_fund_code FROM parameters) = ''))
        AND ((ftie.finance_ledger_name = (SELECT transaction_ledger_name FROM parameters)) OR ((SELECT transaction_ledger_name FROM parameters) = ''))
        AND ((ftie.fiscal_year_code = (SELECT fiscal_year_code FROM parameters)) OR ((SELECT fiscal_year_code FROM parameters) = '')) 
        AND ((formatt.bib_format_display= (SELECT format_name FROM parameters)) OR ((SELECT format_name FROM parameters) = ''))    
 
GROUP BY
       ftie.transaction_id,
       pol.order_format,
       ftie.invoice_date::DATE,
       inv.status,
       inv.payment_date::DATE,
       ftie.effective_transaction_amount,
       ftie.transaction_type,
       ftie.invoice_vendor_name,
       inv.vendor_invoice_no,
       invl.invoice_line_number,
       invl.description,
       ftie.finance_ledger_name,
       ftie.fiscal_year_code,
       ftie.effective_fund_code,
       pol.po_line_number,      
       formatt.bib_format_display,
       invl.quantity,       
       ftie.external_account_no  
       
ORDER BY 
        ftie.finance_ledger_name,
        ftie.effective_fund_code,
        ftie.invoice_vendor_name,
        inv.vendor_invoice_no,
        invl.invoice_line_number,
        pol.po_line_number 
;
